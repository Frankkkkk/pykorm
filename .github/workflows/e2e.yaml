name: "Create cluster using KinD"
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  kind:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: kind - Create cluster
        uses: helm/kind-action@v1.2.0
        env:
          KUBECONFIG: /home/runner/.kube/config.yaml
        with:
          version: v0.10.0
          kubectl_version: v1.18.0

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
#     - id: cache-pipenv
#       uses: actions/cache@v1
#       with:
#         path: ~/.local/share/virtualenvs
#         key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install python dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --system --dev

      - name: Testing
        env:
          KUBECONFIG: /home/runner/.kube/config.yaml
        run: |
          kubectl cluster-info
          kubectl version
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          for f in tests/crds/*.yaml; do
            kubectl create -f $f
          done
          python -m pytest --kube-config=$KUBECONFIG
